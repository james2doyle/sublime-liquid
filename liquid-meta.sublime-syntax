%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Liquid Meta
scope: meta.tag.liquid
hidden: true

contexts:
  main:
    - match: '\b(if|else|elsif|endif|for|endfor|unless|endunless|case|endcase|when|break|continue|cycle|tablerow|endtablerow|form|endform|capture|endcapture|paginate|endpaginate|raw|endraw|style|endstyle|javascript|endjavascript|stylesheet|endstylesheet|schema|endschema)\b'
      scope: keyword.control.flow.liquid
    - match: '(assign|layout|liquid|include|render|section\s|increment|decrement)'
      scope: support.function.liquid
    - match: '\s+(\|)\s+(join|first|last|compact|concat|index|map|reverse|size|sort|where|uniq|color_to_rgb|color_to_hsl|color_to_hex|color_extract|color_brightness|color_modify|color_lighten|color_darken|color_saturate|color_desaturate|color_mix|color_contrast|color_difference|brightness_difference|font_modify|font_face|font_url|img_tag|currency_selector|payment_button|script_tag|stylesheet_tag|time_tag|payment_type_svg_tag|abs|at_most|at_least|ceil|divided_by|floor|minus|plus|round|times|modulo|external_video_tag|external_video_url|img_tag|img_url|media_tag|model_viewer_tag|video_tag|money|money_with_currency|money_without_trailing_zeros|money_without_currency|append|camelcase|capitalize|downcase|escape|handleize|handle|md5|sha1|sha256|hmac_sha1|hmac_sha256|newline_to_br|pluralize|prepend|remove_first|remove|replace_first|replace|reverse|slice|split|strip_html|strip_newlines|strip|lstrip|rstrip|truncate|truncatewords|upcase|url_decode|url_encode|url_escape|url_param_escape|asset_url|asset_img_url|file_url|file_img_url|customer_login_link|global_asset_url|img_url|link_to|link_to_vendor|link_to_type|link_to_tag|link_to_add_tag|link_to_remove_tag|payment_type_img_url|shopify_asset_url|sort_by|url_for_type|url_for_vendor|within|date|default|default_errors|default_pagination|format_address|highlight|highlight_active_tag|json|weight_with_unit|placeholder_svg_tag)'
      captures:
        1: keyword.operator.logical.pipe.liquid
        2: support.function.filter.liquid
    - match: '(:)'
      captures:
        1: keyword.operator.assignment.liquid
    - match: '(==|!=|<|>|>=|<=)'
      scope: keyword.operator.logical.liquid
    - match: '\B(\.\.|\+|-|~|\*|\/|\/\/|%|\\)\B'
      scope: keyword.operator.logical.liquid
    - match: '\b(and|or|not|contains|reversed|in)\b\s'
      scope: keyword.operator.liquid
    - match: 'forloop\.(first|index|index0|last|length|rindex|rindex0)+'
      scope: support.function.forloop.liquid
    - match: '\b(with|for|as)\b'
      scope: keyword.control.liquid
    - match: '='
      scope: keyword.operator.assignment.liquid
    - match: '(true|false|blank|nil)'
      scope: constant.language.liquid
    - match: '(?:forloop)[A-z0-9\._-]+'
      scope: variable.other.liquid
    - match: '([A-z0-9\._-]+?)(?=\s+\=\s+[^\=])'
      scope: variable.assignment.liquid
    - match: '(?:[\:|==|!=|<|>|>=|<=|\s])(\d+)'
      scope: constant.numeric.liquid
    - match: '(\d+)\.\.(\d+)'
      captures:
        1: constant.numeric.liquid
        2: constant.numeric.liquid
    - match: '\.'
      scope: punctuation.separator.liquid
    - match: "'"
      scope: punctuation.definition.string.begin.liquid
      push:
        - meta_scope: string.quoted.single.liquid
        - match: "(')|(\n)"
          captures:
            1: punctuation.definition.string.end.liquid
            2: invalid.illegal.newline.liquid
          pop: true
    - match: '"'
      scope: punctuation.definition.string.begin.liquid
      push:
        - meta_scope: string.quoted.double.liquid
        - match: '(")|(\n)'
          captures:
            1: punctuation.definition.string.end.liquid
            2: invalid.illegal.newline.liquid
          pop: true
